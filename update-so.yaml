---
- name: Atualizar sistema operacional conforme a distribuição
  hosts: all
  gather_facts: yes
  become: yes

  vars:
    # Usado para sinalizar reboot no Windows (caso necessário)
    reboot_required: false

  ##########################################################################
  # BLOCO PARA SISTEMAS NÃO WINDOWS (ex.: Linux)
  ##########################################################################
  tasks:
    - block:
        - name: Exibir mensagem para sistemas Linux
          debug:
            msg: "Iniciando atualização do sistema operacional para {{ ansible_distribution }}..."

        - name: Atualizar sistemas baseados em Debian (apt update e upgrade dist)
          apt:
            update_cache: yes
            upgrade: dist  # ou 'yes', conforme necessidade
          when: ansible_os_family == "Debian"

        - name: Atualizar sistemas baseados em RedHat (yum update)
          yum:
            name: "*"
            state: latest
          when: ansible_os_family == "RedHat"
      when: ansible_os_family != "Windows"


  ##########################################################################
  # BLOCO PARA SISTEMAS WINDOWS
  ##########################################################################
    - block:
        - name: Exibir mensagem para sistemas Windows
          debug:
            msg: "Sistema Windows identificado. Iniciando atualização..."

        - name: Reiniciar serviço Windows Update (wuauserv)
          win_service:
            name: wuauserv
            state: restarted

        - name: Reiniciar serviço BITS (opcional, mas recomendado)
          win_service:
            name: bits
            state: restarted

        # Primeiro ciclo de instalação
        - name: Realizar primeira passagem de instalação de updates
          win_updates:
            category_names:
              - Application
              - Connectors
              - CriticalUpdates
              - DefinitionUpdates
              - DeveloperKits
              - FeaturePacks
              - Guidance
              - SecurityUpdates
              - ServicePacks
              - Tools
              - UpdateRollups
              - Updates
              - Upgrades     # Se quiser incluir upgrades maiores (p.ex. build Win10->Win11)
            accept_all: yes
            state: installed
            reboot: no
          register: pass1

        - name: Realizar reboot se necessário (1ª passagem)
          win_reboot:
            reboot_timeout: 3600
          when: pass1.reboot_required

        # Segundo ciclo (e demais) até não haver mais atualizações pendentes
        - name: Realizar segunda (ou mais) passagens até zerar pendências
          win_updates:
            category_names:
              - Application
              - Connectors
              - CriticalUpdates
              - DefinitionUpdates
              - DeveloperKits
              - FeaturePacks
              - Guidance
              - SecurityUpdates
              - ServicePacks
              - Tools
              - UpdateRollups
              - Updates
              - Upgrades
            accept_all: yes
            state: installed
            reboot: no
          register: pass2
          until: pass2.updates | length == 0
          retries: 3        # número de tentativas (ajuste conforme desejar)
          delay: 60         # tempo (segundos) entre cada tentativa

        - name: Realizar reboot se necessário (2ª passagem)
          win_reboot:
            reboot_timeout: 3600
          when: pass2.reboot_required

        - name: Informar conclusão das instalações
          debug:
            msg: "Atualizações concluídas no Windows. Se ainda houver pendências, favor verificar manualmente."
      become: no
      when: ansible_os_family == "Windows"
